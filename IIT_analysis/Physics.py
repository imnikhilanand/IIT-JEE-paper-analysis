from IIT_analysis.Paper import Paper


class Physics(Paper):
    
    def __init__(self,pdf):
        Paper.__init__(self,pdf)
        
    def get_chapters(self):
        self.mechanics = {"hooke's law",
                          "newton's first law",
                          "newton's second law",
                          "newton's third law",
                          'acceleration',
                          'action',
                          'axle',
                          'center of gravity',
                          'centripetal force',
                          'collision',
                          'compression',
                          'conservation',
                          'conservation of momentum',
                          'deceleration',
                          'direction',
                          'displacement',
                          'distance',
                          'drag',
                          'dynamics',
                          'efficiency',
                          'elastic potential energy',
                          'elasticity',
                          'energy',
                          'equilibrium',
                          'force',
                          'free fall',
                          'friction',
                          'fulcrum',
                          'gear',
                          'gradient',
                          'gravitational force',
                          'gravity',
                          'impact',
                          'impulse',
                          'inclined plane',
                          'inertia',
                          'joule',
                          'kinematics',
                          'kinetic energy',
                          'lever',
                          'lift',
                          'load',
                          'machine',
                          'magnitude',
                          'mass',
                          'mechanical advantage',
                          'mechanical energy',
                          'moment',
                          'momentum',
                          'motion',
                          'newton',
                          'pendulum',
                          'periodic motion',
                          'perpetual motion machine',
                          'pivot',
                          'potential energy',
                          'power',
                          'projectile',
                          'pulley',
                          'reaction',
                          'resistance',
                          'scalar',
                          'screw',
                          'simple machine',
                          'slope',
                          'speed',
                          'strain',
                          'stress',
                          'tensile strength',
                          'tension',
                          'terminal velocity',
                          'thrust',
                          'time',
                          'torque',
                          'vector',
                          'velocity',
                          'wedge',
                          'weight',
                          'wheel',
                          'wheel and axle',
                          'work'
                          }
        
        self.fluid_words = {'euler equations',
                            "laplace equation",
                            'mach number',
                            'density',
                            'acoustic theory',
                            'vorticity',
                            'darcy-weisbach equation',
                            'supersonic flow',
                            'hydrodynamics',
                            'strouhal number',
                            'compressible flow',
                            'streamline - stream function',
                            'aerodynamics',
                            'reynolds number',
                            'ideal Gas',
                            'sound barrier',
                            'conservation laws',
                            'flow Coefficient',
                            'pressure',
                            'flow measurement',
                            'vapor pressure',
                            'aeronautics',
                            'reynolds number',
                            'coanda effect',
                            'knudsen number',
                            'turbulent flow',
                            'turbulence',
                            'boundary layer',
                            'laminar Flow',
                            'surface tension',
                            'fluids',
                            'liquids',
                            'euler number',
                            'weber number',
                            'non-newtonian fluid',
                            'lift',
                            'newtonian fluid',
                            'hydraulics',
                            'transonic',
                            'cavitation',
                            'velocity',
                            'prandtl number',
                            "bernoulli's equation",
                            'froude number',
                            'wave drag',
                            'viscosity',
                            'richardson number',
                            'venturi',
                            'navier-Stokes Equations',
                            'gas'}
        
        self.magnetism = {'charles augustin de coulomb',
                          'charles proteus steinmetz',
                          'james clerk maxwell',
                          'michael faraday',
                          'nikola tesla',
                          'thomas edison',
                          'alternating current',
                          'ampere',
                          'atom',
                          'attract',
                          'attraction',
                          'bar magnet',
                          'battery',
                          'bioelectricity',
                          'capacitor',
                          'charge',
                          'circuit',
                          'closed circuit',
                          'compass',
                          'conduct',
                          'conductivity',
                          'conductor',
                          'current',
                          'cycle',
                          'direct current',
                          'electric field',
                          'electrical energy',
                          'electricity',
                          'electromagnet',
                          'electromagnetic',
                          'electromagnetic wave',
                          'electromotive force',
                          'electron',
                          'electrostatic',
                          'electrostatic field',
                          'electrostatics',
                          'ferromagnetism',
                          'field',
                          'force',
                          'frequency',
                          'friction',
                          'generator',
                          'gravitational field',
                          'hertz',
                          'hysteresis',
                          'induction',
                          'inductor',
                          'insulator',
                          'ion',
                          'magnet',
                          'magnetic',
                          'magnetic field',
                          'magnetic flux',
                          'magnetic force',
                          'magnetic moment',
                          'magnetic pole',
                          'magnetism',
                          'metal',
                          'negative charge',
                          'neutral',
                          'nucleus',
                          'ohm',
                          'open circuit',
                          'parallel circuit',
                          'permanent magnet',
                          'positive charge',
                          'potential difference',
                          'proton',
                          'repel',
                          'resistance',
                          'resistivity',
                          'resistor',
                          'semiconductor',
                          'series circuit',
                          'solution',
                          'static electricity',
                          'switch',
                          'terminal',
                          'vector',
                          'volt',
                          'voltage'}
        
        self.waves = {'doppler effect',
                      'amplitude',
                      'angle of reflection',
                      'compression',
                      'crest',
                      'diffraction',
                      'electric',
                      'electromagnetic',
                      'electromagnetic spectrum',
                      'electromagnetic wave',
                      'emission',
                      'energy',
                      'frequency',
                      'hertz',
                      'intensity',
                      'light',
                      'loudness',
                      'magnetic',
                      'medium',
                      'overtone',
                      'peak',
                      'period',
                      'periodic motion',
                      'photon',
                      'pitch',
                      'radiation',
                      'radio wave',
                      'rarefaction',
                      'reflection',
                      'refraction',
                      'sound',
                      'sound wave',
                      'standing wave',
                      'superposition',
                      'transverse',
                      'vacuum',
                      'vibration',
                      'wave',
                      'wavelength'}
        
        self.thermodynamics = {'automobile',
                             'automobile engine',
                             'change',
                             'connection',
                             'conversion',
                             'cooling',
                             'device',
                             'devices',
                             'energy',
                             'engine',
                             'equivalent',
                             'explain',
                             'heat',
                             'heat energy',
                             'important',
                             'law',
                             'law of thermodynamics',
                             'machine',
                             'mechanical',
                             'mechanical energy',
                             'refrigerator',
                             'study',
                             'thermodynamic',
                             'thermodynamics',
                             'work'}
        
        self.atomic_physics = {'enrico fermi',
                               'ernest rutherford',
                               'lise meitner',
                               'marie curie',
                               'absorber',
                               'absorption',
                               'alpha decay',
                               'alpha particle',
                               'atom',
                               'atomic bomb',
                               'atomic mass',
                               'atomic number',
                               'atomic weight',
                               'background radiation',
                               'beta decay',
                               'beta particle',
                               'binding energy',
                               'breeder reactor',
                               'chain reaction',
                               'curie',
                               'decay',
                               'electromagnetic radiation',
                               'electron',
                               'electron volt',
                               'excited',
                               'gamma radiation',
                               'gamma ray',
                               'half-life',
                               'hydrogen bomb',
                               'ion',
                               'ionizing radiation',
                               'irradiate',
                               'isomer',
                               'isotope',
                               'mass defect',
                               'neutron',
                               'nuclear',
                               'nuclear fission',
                               'nuclear fusion',
                               'nuclear reaction',
                               'nuclear reactor',
                               'nucleon',
                               'nucleonics',
                               'nucleus',
                               'positron',
                               'proton',
                               'rad',
                               'radioactive',
                               'radioactive decay',
                               'radioisotope',
                               'scintillation counter',
                               'stability',
                               'tracer',
                               'transmutation'}
            
        self.data_dic = {'mechanics':0,
                         'fluid_mechanics':0,
                         'magentism_electricity':0,
                         'waves':0,
                         'thermodynamics':0,
                         'atomic_physics':0}
        
        for y in self.trimmed_content:
            if y in self.mechanics:
                self.data_dic['mechanics']=self.data_dic['mechanics']+1
                    
        for y in self.trimmed_content:
            if y in self.fluid_words:
                self.data_dic['fluid_mechanics']=self.data_dic['fluid_mechanics']+1
        
        for y in self.trimmed_content:
            if y in self.magnetism:
                self.data_dic['magentism_electricity']=self.data_dic['magentism_electricity']+1
        
        for y in self.trimmed_content:
            if y in self.waves:
                self.data_dic['waves']=self.data_dic['waves']+1
        
        for y in self.trimmed_content:
            if y in self.thermodynamics:
                self.data_dic['thermodynamics']=self.data_dic['thermodynamics']+1
        
        for y in self.trimmed_content:
            if y in self.atomic_physics:
                self.data_dic['atomic_physics']=self.data_dic['atomic_physics']+1
                
        return(self.data_dic)   
        
        



